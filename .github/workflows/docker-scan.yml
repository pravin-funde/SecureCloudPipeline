name: Build and Scan Docker Image

on:
  push:
    paths:
      - 'app/**'
      - '.github/workflows/docker-scan.yml'
      

jobs:
  docker-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t securecloud-flask ./app

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: securecloud-flask
          format: table
          exit-code: 0

      - name: Run Semgrep (SAST)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"  

      - name: Run Gitleaks (Secrets Scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source=. --verbose --redact

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk test (SCA for Python)
        working-directory: ./app
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=requirements.txt --package-manager=pip

      - name: Run Trivy and save JSON report
        run: |
          mkdir -p scan-reports
          trivy image --format json -o scan-reports/trivy-report.json securecloud-flask
      - name: Install Semgrep CLI
        run: pip install semgrep

      - name: Run Semgrep and save JSON report
        run: |
          semgrep --config=p/default --json --output scan-reports/semgrep-report.json

      - name: Run Gitleaks and save JSON report
        run: |
          gitleaks detect --source=. --report-format=json --report-path=scan-reports/gitleaks-report.json

      - name: Run Snyk and save JSON report
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk test --file=app/requirements.txt --package-manager=pip --json > scan-reports/snyk-report.json

      